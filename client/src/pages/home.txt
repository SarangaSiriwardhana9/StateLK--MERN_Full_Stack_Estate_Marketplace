/* eslint-disable no-unused-vars */
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import { Swiper, SwiperSlide } from 'swiper/react';
import { Navigation } from 'swiper/modules';
import SwiperCore from 'swiper';
import 'swiper/css/bundle';
import ListingItem from '../Components/Listingitem';
SwiperCore.use([Navigation]);
import './CSS/swiper-custom.css'
import home from '/home2.png';
import back11 from '/back11.jpg';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faHome, faLandmark, faBuilding, faCity } from '@fortawesome/free-solid-svg-icons';
import agent1 from '/agent1.jpg';
import agent2 from '/agent2.jpg';
import agent3 from '/agent3.jpg';
import agent4 from '/agent4.jpg';
import agent5 from '/agent5.jpg';
import map from '/map.png';
import { FaUserFriends, FaHandsHelping, FaClipboardList, FaHandshake } from 'react-icons/fa';
import { FaStar } from 'react-icons/fa';
import Footer from '../Components/Footer';

export default function Home() {
    const [offerListings, setOfferListings] = useState([]);
    const [saleListings, setSaleListings] = useState([]);
    const [rentListings, setRentListings] = useState([]);
    const [loading, setLoading] = useState(true); // Add loading state

    useEffect(() => {
        const fetchOfferListings = async () => {
            try {
                const res = await fetch('api/listing/get?offer=true&limit=4');
                const data = await res.json();
                setOfferListings(data);
                setLoading(false); // Set loading to false after data is fetched
                fetchRentListings();
            } catch (error) {
                console.log(error);
            }
        };
        const fetchRentListings = async () => {
            try {
                const res = await fetch('api/listing/get?type=rent&limit=10');
                const data = await res.json();
                setRentListings(data);
                fetchSaleListings();
            } catch (error) {
                console.log(error);
            }
        };
        const fetchSaleListings = async () => {
            try {
                const res = await fetch('api/listing/get?type=sale&limit=9');
                const data = await res.json();
                setSaleListings(data);
            } catch (error) {
                console.log(error);
            }
        };

        fetchOfferListings();
    }, []);

    return (
        <div className=' bg-blue-100' style={{ backgroundImage: `url(${back11})`, backgroundSize: 'cover', backgroundPosition: 'center' }}>
            {loading && ( // Show loading indicator if loading is true
                <div className='fixed top-0 left-0 flex justify-center items-center w-full h-full bg-gray-900 bg-opacity-50'>
                    <div className="flex flex-col items-center">
                        <div className="w-16 h-16 rounded-full bg-gray-300 animate-pulse"></div>
                        <div className="text-white mt-2">Loading...</div>
                    </div>
                </div>
            )}
       

     
            
 
            
            {/* Our agents section with swiper */}
           {!loading && (
  <Swiper
    spaceBetween={30}
    slidesPerView={1}
    breakpoints={{
      640: {
        slidesPerView: 2,
      },
      768: {
        slidesPerView: 3,
      },
      1024: {
        slidesPerView: 4,
      },
    }}
    navigation
  >
    {/* Agent slides */}
    {agentSlides.map((agent, index) => (
      <SwiperSlide key={index}>
        <div className="bg-white rounded-xl p-4 shadow-md flex flex-col items-center">
          <img src={agent.image} alt={agent.name} className="w-24 h-24 rounded-full mb-4" />
          <h3 className="text-lg font-semibold text-gray-800 mb-2">{agent.name}</h3>
          <p className="text-sm text-gray-600 text-center">{agent.description}</p>
        </div>
      </SwiperSlide>
    ))}
  </Swiper>
)}


          
       
        </div>
    );
}
